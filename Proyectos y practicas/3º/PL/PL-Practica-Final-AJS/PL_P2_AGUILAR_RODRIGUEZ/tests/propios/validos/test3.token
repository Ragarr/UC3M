LET let
ID boolA
ASSIGN =
BOOL_VALUE True
SEMICOLON ;
LET let
ID boolB
ASSIGN =
BOOL_VALUE False
SEMICOLON ;
LET let
ID boolC
ASSIGN =
ID boolA
AND &&
ID boolB
SEMICOLON ;
LET let
ID boolD
ASSIGN =
ID boolA
OR ||
ID boolB
SEMICOLON ;
LET let
ID boolE
ASSIGN =
NOT !
ID boolA
SEMICOLON ;
LET let
ID boolF
ASSIGN =
NOT !
L_PARENTHESIS (
ID boolA
AND &&
ID boolB
R_PARENTHESIS )
OR ||
ID boolC
SEMICOLON ;
LET let
ID boolG
ASSIGN =
NOT !
ID boolA
AND &&
L_PARENTHESIS (
NOT !
ID boolB
OR ||
ID boolC
R_PARENTHESIS )
SEMICOLON ;
LET let
ID compA
ASSIGN =
NUMBER_VALUE 1
SEMICOLON ;
LET let
ID compB
ASSIGN =
NUMBER_VALUE 2
SEMICOLON ;
LET let
ID compC
ASSIGN =
ID compA
EQUALS ==
ID compB
SEMICOLON ;
LET let
ID compE
ASSIGN =
ID compA
LESS_THAN <
ID compB
SEMICOLON ;
LET let
ID compF
ASSIGN =
ID compA
GREATER_THAN >
ID compB
SEMICOLON ;
LET let
ID compG
ASSIGN =
ID compA
LESS_EQUAL <=
ID compB
SEMICOLON ;
LET let
ID compH
ASSIGN =
ID compA
GREATER_EQUAL >=
ID compB
SEMICOLON ;
