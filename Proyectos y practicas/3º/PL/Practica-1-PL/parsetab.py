
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL COMMA COMPARATOR KEY L_BRACKET L_SQ_BRACKET NULL NUMBER R_BRACKET R_SQ_BRACKET STRING\n        file : object\n             | lambda\n        \n        lambda :\n        \n        object : L_BRACKET content R_BRACKET\n        \n        content : KEY value\n                | KEY value COMMA content\n                | lambda\n        \n        value : object\n              | expr\n              | list\n              | STRING\n              | BOOL\n              | NULL\n              | NUMBER\n        \n        expr : NUMBER COMPARATOR NUMBER\n        \n        list : L_SQ_BRACKET list_content R_SQ_BRACKET\n        \n        list_content : object\n                     | object COMMA list_content\n                     | lambda\n        '
    
_lr_action_items = {'L_BRACKET':([0,6,17,26,],[4,4,4,4,]),'$end':([0,1,2,3,8,],[-3,0,-1,-2,-4,]),'KEY':([4,18,],[6,6,]),'R_BRACKET':([4,5,7,8,9,10,11,12,13,14,15,16,18,23,24,25,],[-3,8,-7,-4,-5,-8,-9,-10,-11,-12,-13,-14,-3,-6,-15,-16,]),'STRING':([6,],[13,]),'BOOL':([6,],[14,]),'NULL':([6,],[15,]),'NUMBER':([6,19,],[16,24,]),'L_SQ_BRACKET':([6,],[17,]),'COMMA':([8,9,10,11,12,13,14,15,16,21,24,25,],[-4,18,-8,-9,-10,-11,-12,-13,-14,26,-15,-16,]),'R_SQ_BRACKET':([8,17,20,21,22,26,27,],[-4,-3,25,-17,-19,-3,-18,]),'COMPARATOR':([16,],[19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,],[1,]),'object':([0,6,17,26,],[2,10,21,21,]),'lambda':([0,4,17,18,26,],[3,7,22,7,22,]),'content':([4,18,],[5,23,]),'value':([6,],[9,]),'expr':([6,],[11,]),'list':([6,],[12,]),'list_content':([17,26,],[20,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> object','file',1,'p_file','ajson_parser.py',25),
  ('file -> lambda','file',1,'p_file','ajson_parser.py',26),
  ('lambda -> <empty>','lambda',0,'p_lambda','ajson_parser.py',38),
  ('object -> L_BRACKET content R_BRACKET','object',3,'p_object','ajson_parser.py',44),
  ('content -> KEY value','content',2,'p_content','ajson_parser.py',50),
  ('content -> KEY value COMMA content','content',4,'p_content','ajson_parser.py',51),
  ('content -> lambda','content',1,'p_content','ajson_parser.py',52),
  ('value -> object','value',1,'p_value','ajson_parser.py',62),
  ('value -> expr','value',1,'p_value','ajson_parser.py',63),
  ('value -> list','value',1,'p_value','ajson_parser.py',64),
  ('value -> STRING','value',1,'p_value','ajson_parser.py',65),
  ('value -> BOOL','value',1,'p_value','ajson_parser.py',66),
  ('value -> NULL','value',1,'p_value','ajson_parser.py',67),
  ('value -> NUMBER','value',1,'p_value','ajson_parser.py',68),
  ('expr -> NUMBER COMPARATOR NUMBER','expr',3,'p_expr','ajson_parser.py',74),
  ('list -> L_SQ_BRACKET list_content R_SQ_BRACKET','list',3,'p_list','ajson_parser.py',89),
  ('list_content -> object','list_content',1,'p_list_content','ajson_parser.py',95),
  ('list_content -> object COMMA list_content','list_content',3,'p_list_content','ajson_parser.py',96),
  ('list_content -> lambda','list_content',1,'p_list_content','ajson_parser.py',97),
]
